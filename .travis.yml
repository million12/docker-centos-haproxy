services:
  - docker

addons:
  hosts:
    - nginx
    - haproxy

jobs:
  include:
    - stage: build&test
      script:
        # Build Image
        - docker build -t million12/haproxy .
        # Tag image for later deployment
        - docker build -t million12/haproxy:latest .
        - export RELEASE=$(grep "HAPROXY_VERSION=" Dockerfile | sed 's|^.*=||g' |awk '{print $1}' | sed 's|"||g'); docker build -t million12/haproxy:${RELEASE} .
        #
        # Test interactive mode
        #
        - docker run --cap-add NET_ADMIN -ti million12/haproxy -vv
        - docker run --cap-add NET_ADMIN -ti million12/haproxy -vv | grep "HA-Proxy version"
        - docker run --cap-add NET_ADMIN -ti million12/haproxy -vv | grep "Encrypted password support"
        - docker run --cap-add NET_ADMIN -ti million12/haproxy -vv | grep "OpenSSL 1.0.2"

        #
        # Test daemon mode (default settings)
        #
        - docker run -d --cap-add NET_ADMIN -p 8080:80 --name haproxy million12/haproxy && sleep 1
        - curl -u admin:admin http://127.0.0.1:8080/admin?stats
        - docker rm -f haproxy || true

        #
        # Test providing custom HAProxy config
        # Test restarting after making changes in that config
        #
        - docker run -d --cap-add NET_ADMIN -p 8080:80 -v ${PWD}/container-files/etc/haproxy/haproxy.cfg:/haproxy/my-haproxy.cfg -e HAPROXY_CONFIG=/haproxy/my-haproxy.cfg --name haproxy million12/haproxy && sleep 5
        # Test if HAProxy uses the provided alternative config
        - while true; do if docker logs haproxy | grep "HAProxy started with /haproxy/my-haproxy.cfg config"; then break; else sleep 1; fi done

        # Make a change and check if HAProxy restarts
        - docker exec -i haproxy sh -c 'echo "" >> /haproxy/my-haproxy.cfg'
        - while true; do if docker logs haproxy | grep "HAProxy restarted"; then break; else sleep 1; fi done

        # Check HAProxy stats
        - curl -sSLi http://haproxy:8080/admin?stats | grep '401 Unauthorized'
        - curl -sSLi --user admin:admin http://haproxy:8080/admin?stats
        - curl -sSLi --user admin:admin http://haproxy:8080/admin?stats | grep '200 OK'
        - curl -sSLi --user admin:admin http://haproxy:8080/admin?stats | grep 'Statistics Report'

        # Make invalid entry
        - docker exec -i haproxy sh -c 'echo "blabla" >> /haproxy/my-haproxy.cfg'
        - docker exec -i haproxy sh -c 'cat /haproxy/my-haproxy.cfg | grep "blabla"'
        - docker rm -f haproxy || true
        #
        # Test whole stack with Nginx back-end - @see Tests/docker-compose.yml
        #
        - docker-compose -f Tests/docker-compose.yml up -d
        - sleep 5

        # Test direct request to Nginx
        - curl -sSLi http://nginx:4080  | grep '200 OK'
        - curl -sSLi http://nginx:4080  | grep 'default vhost'
        - curl -sSLi --insecure https://nginx:4443 | grep '200 OK'
        - curl -sSLi --insecure https://nginx:8443 | grep 'default vhost'

        # Test requests via HAProxy
        - curl -sSLi http://haproxy:8080 | grep '200 OK'
        - curl -sSLi http://haproxy:8080 | grep 'default vhost'
        - curl -sSLi --insecure https://haproxy:8443 | grep '200 OK'
        - curl -sSLi --insecure https://haproxy:8443 | grep 'default vhost'
        - openssl s_client -connect haproxy:8443 -nextprotoneg ''
        - openssl s_client -connect haproxy:8443 -nextprotoneg '' | grep 'Secure Renegotiation IS supported'
        - openssl s_client -connect haproxy:8443 -nextprotoneg '' | grep 'Protocol' | grep TLSv1.2

        # Cahce Image on Docker Hub
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - docker tag million12/haproxy:latest million12/haproxy:stage
        - docker push million12/haproxy:stage

    - stage: deploy
      if: branch = master
      script:
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - docker pull million12/haproxy:stage
        - docker tag million12/haproxy:stage million12/haproxy:latest
        - export RELEASE=$(grep "HAPROXY_VERSION=" Dockerfile | sed 's|^.*=||g' |awk '{print $1}'); docker tag million12/haproxy:stage million12/haproxy:$RELEASE
        - docker push million12/haproxy:latest
        - export RELEASE=$(grep "HAPROXY_VERSION=" Dockerfile | sed 's|^.*=||g' |awk '{print $1}'); docker push million12/haproxy:$RELEASE
        - docker push million12/haproxy:latest
